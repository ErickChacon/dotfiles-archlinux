# ~/.config/tmux/tmux.conf

# Basic bindings -------------------------------------------------------------

# Tmux key (C-a)
unbind C-b
set -g prefix C-a

# # Select panes with <C-a> + h, j, k, l
setw -g mode-keys vi
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R

# List all tmux-sessions
bind a choose-tree -Zs

# New splits on the same current pane path
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"
# bind c new-window -c "#{pane_current_path}"

# List windows from 1 and renumber them
set -g base-index 1
set-window-option -g pane-base-index 1
set -g renumber-windows on

# Allow scrolling with mouse
set -g mouse on # to scroll with mouse

# Resize current pane vertically
bind-key r resize-pane -y 43

# Custom rearrangment
# bind D source-file ~/.tmux/dev
# bind c-c source-file ~/.tmux/start-c
# bind C source-file ~/.tmux/start-cv
# bind c-r source-file ~/.tmux/start-r
# bind R source-file ~/.tmux/start-rv

# Tmux and Neovim integration ------------------------------------------------

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# custom window binding: C-w
bind-key -n C-w switch-client -T NAVIGATOR

# navigation with <C-w> + h,j,k,l
bind-key -T NAVIGATOR h if-shell "$is_vim" 'send-keys C-w h' {
    if -F '#{pane_at_left}' '' 'select-pane -L'
}
bind-key -T NAVIGATOR j if-shell "$is_vim" 'send-keys C-w j' {
    if -F '#{pane_at_bottom}' '' 'select-pane -D'
}
bind-key -T NAVIGATOR k if-shell "$is_vim" 'send-keys C-w k' {
    if -F '#{pane_at_top}' '' 'select-pane -U'
}
bind-key -T NAVIGATOR l if-shell "$is_vim" 'send-keys C-w l' {
    if -F '#{pane_at_right}' '' 'select-pane -R'
}

# bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
# bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
# bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
# bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# resize with <C-h,j,k,l>
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "resize-pane -L 5"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "resize-pane -D 5"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "resize-pane -U 5"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "resize-pane -R 5"

bind-key -T copy-mode-vi C-h resize-pane -L 5
bind-key -T copy-mode-vi C-j resize-pane -D 5
bind-key -T copy-mode-vi C-k resize-pane -U 5
bind-key -T copy-mode-vi C-l resize-pane -R 5

# Status Bar -----------------------------------------------------------------

# The statusbar {

cl_black='#000000'
cl_oranges="#f79375"
cl_orange="#665C54"
cl_whiteUbuntu="#dfdbd2"
cl_grayUbuntu='#44433E'
cl_white="#ffffff"
cl_gray='#686b78'
cl_visual="#665C54"


# Status bar settings
set -g status on                                    # activate status line
set -g status-position bottom                       # bootom status line
set -g status-interval 15                           # update each x seconds
set -g status-style fg=default,bg=red,default   # default colors as terminal

# Status left
set -g status-left-length 20                        # maximum length of the left
set -g status-left "#{?client_prefix,#[fg=$cl_black]#[bg=$cl_white]#[bold],#[fg=$cl_whiteUbuntu]#[bg=$cl_black]#[bold]} #S #{?client_prefix,#[fg=$cl_white]#[bg=$cl_grayUbuntu]#[nobold],#[fg=$cl_black]#[bg=$cl_grayUbuntu]#[nobold]}"

# status right
set -g status-right-length 150                      # maximum length of the left
set -g status-right "#[fg=$cl_black,bg=$cl_grayUbuntu,bold]#[fg=$cl_whiteUbuntu,bg=$cl_black,bold]\uF080 "

# windows status
set -g window-status-format "#[fg=$cl_whiteUbuntu,nobold] #I:#[fg=$cl_whiteUbuntu,nobold]#W"
set -g window-status-style fg=default,bg=default
set -g window-status-current-format "#[fg=$cl_grayUbuntu,bg=$cl_orange]#[fg=$cl_white,bg=$cl_orange] #I:#[fg=$cl_white,nobold]#W ✔ #[fg=$cl_orange,bg=$cl_grayUbuntu,nobold]"
set -g window-status-current-style 'fg=red,bg=cyan'

# # Type and color of lines between splits
# set -g pane-border-fg colour232 # not active
# set -g pane-active-border-fg colour232

# # this is important for autoread vim
# set -g focus-events on
